hist(X)
hist(x)
y <- rnorm(100)
plot(x, y, pch = 20)
title('Scatter')
text(-2, -1, 'Label')
text(-2, 2, 'Label')
legend('bottomleft', 'Hi')
fit = lm(y - x)
fit = lm(y ~ x)
View(fit)
abline(fit)
abline(fit, lwd=3)
?Devices
packageVersion("swirl")
library(swirl)
install_from_swirl("Exploratory Data Analysis")
rm(list = ls())
swirl()
rm(list = ls())
q(save="no")
library(swirl)
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = 'blue')
abline(h=12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = 'green', breaks = 100)
rug(ppm)
hist(ppm, col = 'green')
abline(v=12)
abline(v=12, lwd=2)
abline(v=median(ppm), col = "magenta", lwd=4)
names(pollution)
reg <- pollution$region
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat")
barplot(reg, col = "wheat", main = )
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow=c(2,1), mar=c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h=12, lwd=2, lty=2)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h=12, lwd=2,lty=2)
par(mfrow=c(1,2), mar=c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file="geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data=state,layout=c(4,1))
xyplot(Life.Exp ~ Income | region, data=state,layout=c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data=mpg)
rm(list=ls())
install.packages('lattice')
library(lattice); library(datasets)
xyplot(Ozone ~ Wind, data = airquality)
plot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality)
?transform
p <- xyplot(Ozone ~ Wind, data = airquality)
class(p)
p
str(p)
library(ggplot2)
str(mpg)
qplot(displ, hwy, data=mpg)
qplot(displ, hwy, data=mpg, color=drv)
qplot(displ, hwy, data=mpg, geom = c("point", ))
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"))
qplot(mpg$hwy, fill=drv)
qplot(hwy, data = mpg, fill=drv)
qplot(displ, hwy, data = mpg, facets = .~drv)
?log
library(swirl)
swirl()
head(airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality, col="red", pch=8, main="Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch=8, col="red", main="Big Apple Data")
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1))
xyplot(Ozone~Wind | Month, data=airquality, layout=c(5,1))
p <- xyplot(Ozone~Wind,data=airquality)
xyplot(Ozone~Wind | as.factor(Month), data=airquality, layout=c(5,1))
p
names(p)
mynames[myfull]
p[['formula']]
p$x.limits
p[['x.limits']]
table(f)
xyplot(y~x|f, layout=c(2,1))
v1
range(x)
range(y)
v2
myedit('plot1.R')
source(pathtofile('plot1.R'), local = TRUE)
pathtofile('plot1.R')
print(pathtofile('plot1.R'))
myedit("plot2.R")
source(pathtofile('plot2.R'), local = TRUE)
str(diamonds)
table(diamonds$color)
with(diamonds, table(color, cut))
table(diamonds$color,diamonds$cut)
myedit('myLabel.R')
myedit("myLabels.R")
source(pathtofile("myLabels.R"), local = TRUE)
xyplot(price~carat | color * cut, data = diamonds, strip = FALSE, pch=20, xlab = myxlab, ylab = myylab, main=mymain)
xyplot(price~carat | color * cut, data = diamonds, pch=20, xlab = myxlab, ylab = myylab, main=mymain)
colors()
sample(colors(),10)
pal <- colorRamp(c("red", "blue"))
pal(0)
pal(1)
pal(0,1,len=6)
pal(seq(0,1,len=6))
p1 <- colorRampPalette(c("red","blue"))
p1(2)
p1(6)
0xcc CC0033
0xcc
p2 <- colorRampPalette(c("red", "yellow"))
p2(2)
p2(10)
showMe(p1(20))
showMe(p2(20))
str(showMe)
showMe(p2(2)))
showMe(p2(2))
p1
?fun
?rgb
p3 <- colorRampPalette(c('blue', 'green'), alpha=.5)
p3(5)
plot(x, y, pch=19, col=rgb(0,.5,.5))
plot(x, y, pch=19, col=rgb(0,.5,.5, .3))
cols <- brewer.pal(3, 'BuGn')
showMe(cols)
pal <- colorRampPalette(cols)
d
d
play()
nxt()
showMe(pal(20))
image(volcano, col = pal(20))
image(volcano, col = p1(20))
rm(list=ls())
library(swirl)
swirl()
str(mpg)
qplot(displ ~ hwy, data = mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color=drv)
qplot(displ, hwy, data = mpg, color=drv, geom = c("point", "smooth"))
qplot(hwy, data = mpg, color=drv)
qplot(y=hwy, data = mpg, color=drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color=manufacturer)
qplot(hwy, data=mpg, fill=drv)
qplot(displ, hwy, data=mpg, facets = .~drv)
qplot(hwy, data=mpg, facets = drv ~ ., binwidth=2)
qplot(displ, hwy, data=mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g + geom_point()
g + geom_point() + geom_smooth()
g + geom_point() + geom_smooth(method = "lm")
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv)
g + geom_point() + geom_smooth(method = "lm") + facet_grid(. ~ drv) + ggtitle("Swirl Rules!")
g + geom_point(color="pink", size=4, alpha=1/2)
g + geom_point(size=4, alpha=1/2, aes(color=drv))
g + geom_point(aes(color=drv)) + labs(title = "Swirl Rules!") + labs(x="Displacement", y = "Hwy Mileage")
g + geom_point(aes(color=drv), size=2, alpha=1/2) + geom_smooth(size=4, linetype=3, method = "lm", se=FALSE)
g + geom_point(aes(color=drv)) + theme_bw(base_family = 'Times')
plot(myx, myy, type = "l", ylim = c(-3,3))
g <- ggplot(testdat, aes(myx, myy))
g + geom_line()
g + geom_line() + ylim(-3,3)
g + geom_line() + coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x=displ, y = hwy, color=factor(year)))
g + geom_point()
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE)
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black")
g + geom_point() + facet_grid(drv~cyl, margins = TRUE) + geom_smooth(method="lm", se=FALSE, size=2, color="black") + labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
qplot(price, data=diamonds)
range(diamonds[['price']])
range(diamonds$price)
qplot(price, data=diamonds, bindwidth=18497/30)
qplot(price, data=diamonds, binwidth=18497/30)
brk
counts
qplot(price, data=diamonds, binwidth = 18497/30, fill=cut)
qplot(price, data=diamonds, geom="density")
qplot(price, data=diamonds, geom="density", color=cut)
qplot(carat, price, data=mpg)
qplot(carat, price, data=diamonds)
qplot(carat, price, data=diamonds, shape=cut)
qplot(carat, price, data=diamonds, color=cut)
qplot(carat, price, data=diamonds, color=cut, geom_smooth(method = "lm"))
qplot(carat, price, data=diamonds, color=cut, )
qplot(carat, price, data=diamonds, color=cut ) + geom_smooth(method = "lm")
qplot(carat, price, data=diamonds, color=cut, facets = .~cut ) + geom_smooth(method = "lm")
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g + geom_point(alpha=1/3)
cutpoints <- quantile(diamonds$carat, seq(0, 1, 4), na.rm = TRUE)
seq(0, 1, 4)
seq(0, 1, length=4)
cutpoints <- quantile(diamonds$carat, seq(0, 1, length=4), na.rm = TRUE)
cutpoints
quantile(diamonds$carat,probs = seq(0,1,length=4),na.rm=TRUE)
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g + geom_point(alpha=1/3) + facet_grid(cut ~ car2)
diamonds[myd,]
subset(diamonds, is.na(diamonds$car2))
g+geom_point(alpha=1/3)+facet_grid(cut~car2) + geom_smooth(method="lm", size=3, color="pink")
ggplot(diamonds, aes(carat, price)) + geom_boxplot() + facet_grid(.~cut)
rm(list = ls())
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
?axis
?trellis.par.set
q(save="no")
set.seed(12345)
dataMatrix <- matrix(rnorm(400), nrow=40)
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
nrow(dataMatrix):1
?t
dim(dataMatrix)
dim(t(dataMatrix))
heatmap(dataMatrix)
rbinom(1, size=1, prob = .5)
image(1:10, 1:40, t(dataMatrix)[,nrow(dataMatrix):1])
?svd
top.colors()
x <- rnorm(10000)
y <- rnorm(10000)
topo.colors()
smoothScatter(x,y)
rm(list=ls())
q(save="")
q(save="no")
library(dslabs); library(readr); library(ggplot2)
data("murders")
data("polls_us_election_2016")
head(results_us_election_2016)
head(murders)
identical(results_us_election_2016$state, murders$state)
bab <- left_join(murders, results_us_election_2016, by="state")
library(dplyr)
bab <- left_join(murders, results_us_election_2016, by="state")
head(bab)
?inner_join
ded <- inner_join(murders, results_us_election_2016, by="state")
head(ded)
identical(bab, ded)
ded %>% ggplot(aes(population/10^6, electoral_votes, label=abb)) +
geom_point() + geom_text_repel() + scale_x_continuous(trans = 'log2') +
scale_y_continuous(trans = 'log2') + geom_smooth(method = 'lm', se = F)
ded %>% ggplot(aes(population/10^6, electoral_votes, label=abb)) +
+ geom_point() + scale_x_continuous(trans = 'log2') +
+ scale_y_continuous(trans = 'log2') + geom_smooth(method = 'lm', se = F)
ded %>% ggplot(aes(population/10^6, electoral_votes, label=abb)) +
geom_point() + geom_text_repel() + scale_x_continuous(trans = 'log2') +
scale_y_continuous(trans = 'log2') + geom_smooth(method = 'lm', se = F)
ded %>% ggplot(aes(population/10^6, electoral_votes, label=abb)) +
geom_point() + scale_x_continuous(trans = 'log2') +
scale_y_continuous(trans = 'log2') + geom_smooth(method = 'lm', se = F)
?slice
slice(murders, 1:6)
murders[1:6,]
tab1 <- slice(murders, 1:6) %>% select(state, population)
tab1
tbl_df(tab1)
slice(results_us_election_2016, 5)
slice(results_us_election_2016, c(1:3, 5))
tab2 <- slice(results_us_election_2016, c(1:3, 5, 7:8)) %>%
select(state, electoral_votes)
tab2
tab1
left_join(tab1, tab2, by="state")
full_join(tab1, tab2)
semi_join(tab1, tab2)
anti_join(tab1, tab2)
rm(list=ls())
q(save="no")
q(save="no")
library(dplyr)
library(ggplot2)
setwd("C:/Users/julia/OneDrive/Escritorio/Rprogramming/EDAcourseproject1")
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
table(NEI$year)
total_pm <- NEI %>% group_by(SCC, year) %>% summarize(total = sum(Emissions, na.rm = TRUE))
with(total_pm, plot(year, total, type = "n"))
with(total_pm, points(year, total, pch=20))
title(main="PM2.5 emission from all sources in USA")
balt <- subset(NEI, fips == "24510")
by_scc_yr <- balt %>%
select(SCC, year) %>%
group_by(SCC, year) %>%
summarize(total_emissions = sum(SCC))
total_em <- balt %>%
+ group_by(SCC, year) %>%
+ summarize(total_emissions = sum(Emissions, na.rm=TRUE))
with(total_em, plot(year, total_emissions))
balt <- subset(NEI, fips == "24510")
by_scc_yr <- balt %>%
select(SCC, year) %>%
group_by(SCC, year) %>%
summarize(total_emissions = sum(SCC))
total_em <- balt %>%
+ group_by(SCC, year) %>%
+ summarize(total_emissions = sum(Emissions, na.rm=TRUE))
with(total_em, plot(year, total_emissions))
# Use the base plotting system to make a plot answering this question.
balt <- subset(NEI, fips == "24510")
by_scc_yr <- balt %>%
select(SCC, year) %>%
group_by(SCC, year) %>%
summarize(total_emissions = sum(SCC))
total_em <- balt %>%
group_by(SCC, year) %>%
summarize(total_emissions = sum(Emissions, na.rm=TRUE))
with(total_em, plot(year, total_emissions))
with(total_em, plot(year, total_emissions, main="PM2.5 emission from all sources in Baltimore City"))
balt <- subset(NEI, fips == "24510")
by_source <- balt %>% group_by(type, year) %>%
summarize(total_emissions=sum(Emissions, na.rm=TRUE))
by_source %>% ggplot(aes(year, total_emissions, col=type)) + geom_line()
coal_combustion <- subset(SCC, SCC.Level.Three %in% c('Anthracite Coal', 'Bituminous/Subbituminous Coal')) %>%
select(SCC, SCC.Level.Three)
coal_scc <- NEI %>% filter(year %in% 1999:2008) %>%
+ inner_join(coal_combustion, by="SCC") %>%
+ select(SCC, SCC.Level.Three, Emissions, year)
coal_scc %>% group_by(SCC.Level.Three, year) %>%
+ summarize(total_em = sum(Emissions, na.rm = TRUE)) %>%
+ ggplot(aes(year, total_em, col = SCC.Level.Three)) + geom_line()
coal_combustion <- subset(SCC, SCC.Level.Three %in% c('Anthracite Coal', 'Bituminous/Subbituminous Coal')) %>%
select(SCC, SCC.Level.Three)
coal_scc <- NEI %>% filter(year %in% 1999:2008) %>%
inner_join(coal_combustion, by="SCC") %>%
select(SCC, SCC.Level.Three, Emissions, year)
coal_scc %>% group_by(SCC.Level.Three, year) %>%
summarize(total_em = sum(Emissions, na.rm = TRUE)) %>%
ggplot(aes(year, total_em, col = SCC.Level.Three)) + geom_line()
coal_scc %>% group_by(SCC.Level.Three, year) %>%
summarize(total_em = sum(Emissions, na.rm = TRUE)) %>%
ggplot(aes(year, total_em, col = SCC.Level.Three)) + geom_line()
vehicle_scc <- subset(SCC, EI.Sector %in% grep('vehicle', EI.Sector, value=TRUE, ignore.case=TRUE))
mt_vehicle <- balt %>% inner_join(vehicle_scc, by="SCC") %>%
+ select(SCC, year, Emissions, type, EI.Sector) %>%
+ group_by(EI.Sector, year) %>% summarize(total_em = sum(Emissions, na.rm=TRUE)) %>%
+ rename(motor_vehicle_scc = EI.Sector)
mt_vehicle %>% ggplot(aes(year, total_em, col=motor_vehicle_scc)) + geom_line()
vehicle_scc <- subset(SCC, EI.Sector %in% grep('vehicle', EI.Sector, value=TRUE, ignore.case=TRUE))
mt_vehicle <- balt %>% inner_join(vehicle_scc, by="SCC") %>%
select(SCC, year, Emissions, type, EI.Sector) %>%
group_by(EI.Sector, year) %>% summarize(total_em = sum(Emissions, na.rm=TRUE)) %>%
rename(motor_vehicle_scc = EI.Sector)
mt_vehicle %>% ggplot(aes(year, total_em, col=motor_vehicle_scc)) + geom_line()
coal_combustion <- subset(SCC, SCC.Level.Three %in% c('Anthracite Coal', 'Bituminous/Subbituminous Coal')) %>%
select(SCC, SCC.Level.Three)
coal_scc <- NEI %>%
inner_join(coal_combustion, by="SCC") %>%
select(SCC, SCC.Level.Three, Emissions, year)
coal_scc %>% group_by(SCC.Level.Three, year) %>%
summarize(total_em = sum(Emissions, na.rm = TRUE)) %>%
ggplot(aes(year, total_em, col = SCC.Level.Three)) + geom_line()
vehicle_scc <- subset(SCC, EI.Sector %in% grep('vehicle', EI.Sector, value=TRUE, ignore.case=TRUE))
joined <- NEI %>% filter(fips %in% c('24510', '06037')) %>%
inner_join(vehicle_scc, by="SCC") %>%
select(SCC, fips, EI.Sector, Emissions, year) %>%
group_by(year, EI.Sector)
balt <- subset(joined, fips == "24510") %>%
summarize(total_em = sum(Emissions, na.rm=TRUE))
angl <- subset(joined, fips == "06037") %>%
summarize(total_em = sum(Emissions, na.rm=TRUE))
par(mfrow=c(1,2))
with(balt, plot(year, total_em, col=EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector))
mtext('Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
mtext('Emissions from motor vehicle sources in Baltimore vs L.A')
mtext('Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
title(main='dddd')
with(balt, plot(year, total_em, col=EI.Sector, main = 'Emissions from motor vehicle sources in Baltimore'))
with(angl, plot(year, total_em, col=EI.Sector, main='Emissions from motor vehicle sources in L.A'))
par(mfrow=c(1,2))
plot()
par(mfrow=c(1,2))
with(balt, plot(year, total_em, col=EI.Sector, main = 'Emissions from motor vehicle sources in Baltimore'))
with(angl, plot(year, total_em, col=EI.Sector, main='Emissions from motor vehicle sources in L.A'))
par(mfrow=c(1,2))
with(balt, plot(year, total_em, col=EI.Sector, main = 'Emissions from motor vehicle sources in Baltimore'))
with(angl, plot(year, total_em, col=EI.Sector, main='dd'))
mtext('ddddd')
?mtext
?title
par(mfrow=c(1,2))
with(balt, plot(year, total_em, col=EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore')
title( main = 'Emissions from motor vehicle sources in Baltimore', outer=TRUE)
par(mfrow=c(1,2))
with(balt, plot(year, total_em, col=EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
?par
par(mfrow=c(1,2), mar=c(2,4,2,4))
with(balt, plot(year, total_em, col=EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
par(mfrow=c(1,2), mar=c(2,4,2,4), oma=c(0,0,2,0))
with(balt, plot(year, total_em, col=EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
par(mfrow=c(1,2), mar=c(2,4,2,4), oma=c(0,0,2,0))
with(balt, plot(year, total_em, col=EI.Sector, legend=EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
?legend
with(balt, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(balt$EI.Sector), legend = unique(balt$EI.Sector))
?legend
with(balt, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(balt$EI.Sector), legend = unique(balt$EI.Sector), text.width = 2)
?par
?par
par(mfrow=c(1,2), oma=c(0,0,2,0), cex=.5)
with(balt, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(balt$EI.Sector), legend = unique(balt$EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(angl$EI.Sector), legend = unique(angl$EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
?par
par(mfrow=c(1,2), oma=c(0,0,2,0),cex=.5)
with(balt, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(balt$EI.Sector), legend = unique(balt$EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(angl$EI.Sector), legend = unique(angl$EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
par(mfrow=c(1,2), oma=c(0,0,2,0), cex=.7)
with(balt, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(balt$EI.Sector), legend = unique(balt$EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(angl$EI.Sector), legend = unique(angl$EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
par(mfrow=c(1,2), oma=c(0,0,2,0), cex=.6)
with(balt, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(balt$EI.Sector), legend = unique(balt$EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(angl$EI.Sector), legend = unique(angl$EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
par(mfrow=c(1,2), oma=c(0,0,2,0), cex=.5)
with(balt, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(balt$EI.Sector), legend = unique(balt$EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(angl$EI.Sector), legend = unique(angl$EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
par()$mar
par(mfrow=c(1,2), mar=c(3,4,2,4),oma=c(0,0,2,0), cex=.5)
with(balt, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(balt$EI.Sector), legend = unique(balt$EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(angl$EI.Sector), legend = unique(angl$EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
par(mfrow=c(1,2), mar=c(5,4,2,4),oma=c(0,0,2,0), cex=.5)
with(balt, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(balt$EI.Sector), legend = unique(balt$EI.Sector))
with(angl, plot(year, total_em, col=EI.Sector, pch=20))
legend('topright', pch=20, col=unique(angl$EI.Sector), legend = unique(angl$EI.Sector))
title( main = 'Emissions from motor vehicle sources in Baltimore vs L.A', outer=TRUE)
